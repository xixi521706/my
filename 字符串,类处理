#define _CRT_SECURE_NO_WARNINGS 1
#include <stdio.h>
#include <iostream>
using namespace std;

class mystring{
public:
	mystring(const char* na = NULL) {
		if (na == NULL){
			_str = new char[1];
			*_str = '\0';
		}
		else{
			_str = new char[10000];
			strcpy(_str, na);
		}
	}
	mystring(const mystring & another){
		_str = new char[10000];
		strcpy(_str, another._str);
	}
	mystring & operator=(const mystring & another){
		if (this == &another)
			return *this;
		delete[] _str;
		_str = new char[10000];
		strcpy(_str, another._str);
		return *this;
	}
	mystring & operator+(mystring & another){
		int len1 = strlen(_str)-1;
		int len2 = strlen(another._str)-1;
		int carry = 0;
		while (len1 >= 0 && len2 >= 0){
			if (len1 != 0 && len2 != 0){
				int a = *(_str + len1) - '0' + *(another._str + len2) - '0' + carry;
				if (a > 10){
					a = a % 10;
					carry = 1;
					*(_str + len1) = a + '0';
					len1--;
					len2--;
				}
				else{
					carry = 0;
					*(_str + len1) = a + '0';
					len1--;
					len2--;
				}
			}
			else  if (len1 == 0){

				return another;
			}
		}
		return *this;
	}
	char* c_str() {
		return _str;
	}
	~mystring(){
		delete[] _str;
	}
private:
	char* _str;
};

int main(){
	mystring str1("12465"), str2("3696");
	cout << str1.c_str()<< endl;
	cout << str2.c_str() << endl;
	mystring str3;
	str3 = str1 + str2;
	cout << str3.c_str() << endl;
	return 0;
}
