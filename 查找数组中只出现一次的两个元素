#include <stdio.h>

int find(int arr[], int len)
{
	int i = 0;
	int tmp = 0;
	for (i = 0; i < len; i++)
	{
		tmp ^= arr[i];
	}
	return tmp;
}
int find2(int tmp)
{
	int n = 1;
	while (tmp & n ==0)
		n <<= 1;
	return n;
}
void part(int arr[], int L, int R, int n,int tmp)
{
	while (L != R)
	{
		while (L != R)
		{
			if (arr[L] & n ==1 )
				L++;
			else
				break;
		}
		while (L != R)
		{
			if (arr[R] & n == 0)
				R--;
			else
				break;
		}
		int tm = arr[L];
		arr[L] = arr[R];
		arr[R] = tm;
	}
	printf("%d\n", find(arr, L-1));
	printf("%d\n", tmp ^ find(arr, L));
}
int main()
{
	int arr[] = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 8, 7, 6, 5, 4, 3 };
	int len = sizeof(arr) / sizeof(arr[0]);
	int tmp = find(arr, len);
	int n = find2(tmp);
	part(arr, 0, len - 1, n,tmp);
	return 0;
}
